server.port=8080
server.servlet.context-path=${APP_PATH}

app.show.log=${APP_SHOW_LOG}
app.host.origin=${APP_HOST_ORIGIN}
app.default.rol=2
app.cloudinary.url=${APP_CLOUDINARY_URL}
app.default.secretpass=${APP_DEFAULT_SECRETPASS}

ngrok.enabled=${NGROK_ENABLED}
ngrok.authToken=${NGROK_AUTHTOKEN}

#application:
application.title=@project.name@
application.version=@project.version@
application.author=Fritz_Rodas

#---------- Actuator Configuration ----------
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
info.app.name=Cine Admin
info.app.description=Gestion de Cine
info.app.version=1.0.0
info.app.author=Fritz Rodas
info.app.docs=http://frodas.dev

management.info.env.enabled=true
management.info.build.enabled=true
management.info.git.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

#---------- OpenApi Configuration ----------
springdoc.api-docs.enabled=${APP_SHOW_DOCS}
springdoc.swagger-ui.enabled=${APP_SHOW_DOCS}
springdoc.version=@springdoc.version@
springdoc.swagger-ui.default-models-expand-depth=-1
springdoc.swagger-ui.groups-order=asc
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

#---------- Security Configuration ----------
app.security.jwt.secret-key=${TOKEN_SECRET_KEY}
app.security.jwt.expiration-ms=1800000
app.security.jwt.refresh-token.expiration-ms=604800000

#---------- Postgresql Configuration ----------
spring.datasource.url=${POSTGRES_URL_LOCAL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
#---
spring.config.activate.on-profile=docker
spring.datasource.url=${POSTGRES_URL_DOCKER}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}

#---------- JPA Configuration ----------
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.highlight_sql=true
# por defecto es true pero en false mejora el rendimiento de transacciones
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

#---------- Redis Configuration ----------
spring.cache.hostname=${REDIS_HOST}
spring.cache.port=${REDIS_PORT}
spring.cache.password=${REDIS_PASSWORD}

#---------- Logging Configuration ----------
#logging.level.com.frodas.cine.admin=trace
#logging.file.name=./logs/admin_cine.log
#logging.file=${jboss.server.log.dir}/admin_cine-backend.log
#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

#---------- Login OAuth Configuration ----------
app.oauth.google.clientId=${APP_OAUTH_GOOGLE_CLIENTID}

#---------- Email Configuration ----------
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.port=587
spring.mail.properties.mail.ssl.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
app.mail.recovery.template=email-template.html
app.mail.recovery.from-sender=${MAIL_FROM_SENDER}
app.mail.recovery.url=http://localhost:4200/#/restore/

#---------- Compression Gzip ----------
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,application/json,application/xml,text/css,text/javascript,application/javascript
server.compression.min-response-size=1024
